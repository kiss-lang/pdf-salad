package pdf_lib.cjs.api;

@:jsRequire("pdf-lib/cjs/api/operations") @valueModuleOnly extern class Operations {
	static function drawText(line:pdf_lib.PDFHexString, options:pdf_lib.DrawTextOptions):Array<pdf_lib.PDFOperator>;
	static function drawLinesOfText(lines:Array<pdf_lib.PDFHexString>, options:pdf_lib.DrawLinesOfTextOptions):Array<pdf_lib.PDFOperator>;
	static function drawImage(name:ts.AnyOf2<String, pdf_lib.PDFName>, options:{ var x : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var y : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var width : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var height : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var rotate : pdf_lib.Rotation; var xSkew : pdf_lib.Rotation; var ySkew : pdf_lib.Rotation; @:optional var graphicsState : ts.AnyOf2<String, pdf_lib.PDFName>; }):Array<pdf_lib.PDFOperator>;
	static function drawPage(name:ts.AnyOf2<String, pdf_lib.PDFName>, options:{ var x : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var y : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var xScale : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var yScale : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var rotate : pdf_lib.Rotation; var xSkew : pdf_lib.Rotation; var ySkew : pdf_lib.Rotation; @:optional var graphicsState : ts.AnyOf2<String, pdf_lib.PDFName>; }):Array<pdf_lib.PDFOperator>;
	static function drawLine(options:{ var start : { var x : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var y : ts.AnyOf2<Float, pdf_lib.PDFNumber>; }; var end : { var x : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var y : ts.AnyOf2<Float, pdf_lib.PDFNumber>; }; var thickness : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var color : Null<pdf_lib.Color>; @:optional var dashArray : Array<ts.AnyOf2<Float, pdf_lib.PDFNumber>>; @:optional var dashPhase : ts.AnyOf2<Float, pdf_lib.PDFNumber>; @:optional var lineCap : pdf_lib.LineCapStyle; @:optional var graphicsState : ts.AnyOf2<String, pdf_lib.PDFName>; }):Array<pdf_lib.PDFOperator>;
	static function drawRectangle(options:{ var x : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var y : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var width : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var height : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var borderWidth : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var color : Null<pdf_lib.Color>; var borderColor : Null<pdf_lib.Color>; var rotate : pdf_lib.Rotation; var xSkew : pdf_lib.Rotation; var ySkew : pdf_lib.Rotation; @:optional var borderLineCap : pdf_lib.LineCapStyle; @:optional var borderDashArray : Array<ts.AnyOf2<Float, pdf_lib.PDFNumber>>; @:optional var borderDashPhase : ts.AnyOf2<Float, pdf_lib.PDFNumber>; @:optional var graphicsState : ts.AnyOf2<String, pdf_lib.PDFName>; }):Array<pdf_lib.PDFOperator>;
	static function drawEllipsePath(config:{ var x : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var y : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var xScale : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var yScale : ts.AnyOf2<Float, pdf_lib.PDFNumber>; }):Array<pdf_lib.PDFOperator>;
	static function drawEllipse(options:{ var x : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var y : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var xScale : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var yScale : ts.AnyOf2<Float, pdf_lib.PDFNumber>; @:optional var rotate : pdf_lib.Rotation; var color : Null<pdf_lib.Color>; var borderColor : Null<pdf_lib.Color>; var borderWidth : ts.AnyOf2<Float, pdf_lib.PDFNumber>; @:optional var borderDashArray : Array<ts.AnyOf2<Float, pdf_lib.PDFNumber>>; @:optional var borderDashPhase : ts.AnyOf2<Float, pdf_lib.PDFNumber>; @:optional var graphicsState : ts.AnyOf2<String, pdf_lib.PDFName>; @:optional var borderLineCap : pdf_lib.LineCapStyle; }):Array<pdf_lib.PDFOperator>;
	static function drawSvgPath(path:String, options:{ var x : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var y : ts.AnyOf2<Float, pdf_lib.PDFNumber>; @:optional var rotate : pdf_lib.Rotation; var scale : Null<ts.AnyOf2<Float, pdf_lib.PDFNumber>>; var color : Null<pdf_lib.Color>; var borderColor : Null<pdf_lib.Color>; var borderWidth : ts.AnyOf2<Float, pdf_lib.PDFNumber>; @:optional var borderDashArray : Array<ts.AnyOf2<Float, pdf_lib.PDFNumber>>; @:optional var borderDashPhase : ts.AnyOf2<Float, pdf_lib.PDFNumber>; @:optional var borderLineCap : pdf_lib.LineCapStyle; @:optional var graphicsState : ts.AnyOf2<String, pdf_lib.PDFName>; }):Array<pdf_lib.PDFOperator>;
	static function drawCheckMark(options:{ var x : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var y : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var size : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var thickness : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var color : Null<pdf_lib.Color>; }):Array<pdf_lib.PDFOperator>;
	static function rotateInPlace(options:{ var width : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var height : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var rotation : Int; }):Array<pdf_lib.PDFOperator>;
	static function drawCheckBox(options:{ var x : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var y : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var width : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var height : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var thickness : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var borderWidth : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var markColor : Null<pdf_lib.Color>; var color : Null<pdf_lib.Color>; var borderColor : Null<pdf_lib.Color>; var filled : Bool; }):Array<pdf_lib.PDFOperator>;
	static function drawRadioButton(options:{ var x : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var y : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var width : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var height : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var borderWidth : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var dotColor : Null<pdf_lib.Color>; var color : Null<pdf_lib.Color>; var borderColor : Null<pdf_lib.Color>; var filled : Bool; }):Array<pdf_lib.PDFOperator>;
	static function drawButton(options:{ var x : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var y : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var width : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var height : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var borderWidth : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var color : Null<pdf_lib.Color>; var borderColor : Null<pdf_lib.Color>; var textLines : Array<{ var encoded : pdf_lib.PDFHexString; var x : Float; var y : Float; }>; var textColor : pdf_lib.Color; var font : ts.AnyOf2<String, pdf_lib.PDFName>; var fontSize : ts.AnyOf2<Float, pdf_lib.PDFNumber>; }):Array<pdf_lib.PDFOperator>;
	static function drawTextLines(lines:Array<{ var encoded : pdf_lib.PDFHexString; var x : Float; var y : Float; }>, options:pdf_lib.DrawTextLinesOptions):Array<pdf_lib.PDFOperator>;
	static function drawTextField(options:{ var x : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var y : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var width : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var height : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var borderWidth : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var color : Null<pdf_lib.Color>; var borderColor : Null<pdf_lib.Color>; var textLines : Array<{ var encoded : pdf_lib.PDFHexString; var x : Float; var y : Float; }>; var textColor : pdf_lib.Color; var font : ts.AnyOf2<String, pdf_lib.PDFName>; var fontSize : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var padding : ts.AnyOf2<Float, pdf_lib.PDFNumber>; }):Array<pdf_lib.PDFOperator>;
	static function drawOptionList(options:{ var x : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var y : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var width : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var height : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var borderWidth : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var color : Null<pdf_lib.Color>; var borderColor : Null<pdf_lib.Color>; var textLines : Array<{ var encoded : pdf_lib.PDFHexString; var x : Float; var y : Float; var height : Float; }>; var textColor : pdf_lib.Color; var font : ts.AnyOf2<String, pdf_lib.PDFName>; var fontSize : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var lineHeight : ts.AnyOf2<Float, pdf_lib.PDFNumber>; var selectedLines : Array<Float>; var selectedColor : pdf_lib.Color; var padding : ts.AnyOf2<Float, pdf_lib.PDFNumber>; }):Array<pdf_lib.PDFOperator>;
}